@using Incoding.Web.Components.Demo.Controllers
@using Incoding.Web.Components.Grid

@(Html.Grid<SampleData>("grid")
      .Mode(GridMode.SubGrid)
      .Split(splitting =>
             {
                 splitting.Add("regular",
                               table => table.Columns(cols =>
                                                      {
                                                          Selector.Jquery.EndsWith(HtmlAttribute.Class, "-filter");
                                                          cols.Add().Field(s => s.Index).Format(ColumnFormat.Empty).SortedBy(SortOrder.Asc).Resizable().Totalable();
                                                          cols.Add().Field(s => s.Amount).Format(ColumnFormat.Currency).Resizable().Totalable().Filterable();
                                                          cols.Add().Field(s => s.AmountPercentage).Format(ColumnFormat.Percentage).Resizable().Title("Amount %")
                                                              .Attr("monkey", "type")
                                                              .Attr("data-value", tmpl => tmpl.For(s => s.Amount).ToHtmlString())
                                                              .IsAttr(tmpl => tmpl.Index, "ahaha")
                                                              .NotAttr(tmpl => tmpl.Index, "hehehe")
                                                              .Bind((iml, tmpl) => iml.When(JqueryBind.Click)
                                                                                      .StopPropagation()
                                                                                      .OnSuccess(dsl => dsl.Window.Alert(tmpl.For(s => s.AmountPercentage))));

                                                          cols.Stacked(s => s.Title("Dates"),
                                                                       stacked =>
                                                                       {
                                                                           stacked.Add().Field(s => s.Start).Resizable();
                                                                           stacked.Add().Field(s => s.End).Resizable();
                                                                       });
                                                      })
                                             .DropdownTmpl("~/Views/Shared/Dropdown.cshtml")
                                             .Nested(s => s.Children,
                                                     table => table.Columns(cols =>
                                                                            {
                                                                                cols.Add().Field(s => s.Index).Format(ColumnFormat.Empty).SortedBy(SortOrder.Asc).Resizable();
                                                                                cols.Add().Field(s => s.Amount).Format(ColumnFormat.Currency).Resizable();
                                                                                cols.Add().Field(s => s.AmountPercentage).Format(ColumnFormat.Percentage).Resizable().Title("Amount %");

                                                                                cols.Stacked(s => s.Title("Dates"),
                                                                                             stacked =>
                                                                                             {
                                                                                                 stacked.Add().Field(s => s.Start).Resizable();
                                                                                                 stacked.Add().Field(s => s.End).Resizable();
                                                                                             });
                                                                            }))
                                             .Summary(summary => summary.Title = "Wow"));

                 splitting.Add("periods",
                               table => table.Columns(cols =>
                                                      {
                                                          cols.Spreaded(s => s.Period,
                                                                        5,
                                                                        (builder, i) =>
                                                                        {
                                                                            builder.Stacked(s => s.Title(i.ToString()),
                                                                                            stacked =>
                                                                                            {
                                                                                                stacked.Add().Field(s => s.Hours).Totalable().AllowEdit(false)
                                                                                                       .Summary<SampleData>(s => s.Average(c => c.Period[i].Hours))
                                                                                                       .Bind((iml, tmpl) => iml.When(JqueryBind.Click)
                                                                                                                               .StopPropagation()
                                                                                                                               .OnSuccess(dsl =>
                                                                                                                                          {
                                                                                                                                              dsl.Window.Alert(tmpl.For(s => s.Hours));
                                                                                                                                              dsl.Window.Alert(tmpl.Up().For(nameof(SampleData.Index)));
                                                                                                                                          }));

                                                                                                stacked.Add().Field(s => s.JTD).Format(ColumnFormat.Currency).Totalable().AllowEdit(false)
                                                                                                       .Summary($"SUM(Period.{i}.JTD)");
                                                                                            });
                                                                        });
                                                      })
                                             .Nested(s => s.Children,
                                                     table => table.Columns(cols =>
                                                                            {
                                                                                cols.Spreaded(s => s.Period,
                                                                                              5,
                                                                                              (builder, i) =>
                                                                                              {
                                                                                                  builder.Stacked(s => s.Title(i.ToString()),
                                                                                                                  stacked =>
                                                                                                                  {
                                                                                                                      stacked.Add().Field(s => s.Hours).Totalable();
                                                                                                                      stacked.Add().Field(s => s.JTD).Format(ColumnFormat.Currency).Totalable();
                                                                                                                  });
                                                                                              });
                                                                            })));
             })
      .Empty(await Html.PartialAsync("~/Views/Shared/NoData.cshtml"))
      .DataSource(new DataSource.SignalR
                  {
                          Event = JqueryBind.None,
                          ChunkSize = 40,
                          Method = nameof(SignalHub.StreamData_Many_Floating)
                  })
      .InfiniteScrolling()
      .Render())
