@using Incoding.Web.Components.Grid;
@{
    Action<ColumnListBuilder<SampleData>> periodCols = cols => cols.Spreaded(s => s.Period, 5,
                                 (cols, i) =>
                                 {
                                     cols.Stacked(s => s.Title(DateTime.Now.AddDays(i).ToShortDateString()),
                                                  cols =>
                                                  {
                                                      cols.Add().Field(s => s.Hours).Title("Hrs").Width(70).Totalable();
                                                      cols.Add().Field(s => s.JTD).Title("$").Width(70).Totalable();
                                                  });
                                 });

    Action<ColumnListBuilder<SampleData>> regularCols = (cols) =>
                     {
                        cols.Add().Field(s => s.Index).Width(50).Format(ColumnFormat.Empty);

                        cols.Add().Field(s => s.Name).Width(70);
                        cols.Add().Field(s => s.Description).Title("Notes").Width(200);

                        cols.Add().Field(s => s.Amount).Width(70).Format(ColumnFormat.Currency).Totalable();
                        cols.Add().Field(s => s.AmountPercentage).Title("Amount %").Format(ColumnFormat.Percentage).Width(70);
                        cols.Add().Field(s => s.Balance).Width(70);

                        cols.Stacked(s => s.Title("Dates"),
                                        cols =>
                                        {
                                            cols.Add().Field(s => s.Start).Width(70);
                                            cols.Add().Field(s => s.End).Width(70);
                                        });
                     };
}

@using (var template = Html.Incoding().Template<SampleData>())
{
    @using (var each = template.ForEach())
    {
        @(Html.Components().Grid<SampleData>("grid")
              .Width("100%")
              .Height("100%")
              .Css("bg-white")
              .Split(splits =>
              {
                  splits.Add("regular", table => table.Css("table table-bordered ")
                                                      .Layout(LayoutType.Auto)
                                                      .Rows(row => row.Css("tr-item-calculate"))
                                                      .Columns(regularCols));

                  splits.Add("ahahaha", table => table.Css("table table-bordered ")
                                                      .Layout(LayoutType.Auto)
                                                      .Rows(row => row.Css("tr-item-calculate"))
                                                      .Columns(periodCols));

                  splits.Add("ehehehe", table => table.Css("table table-bordered ")
                                                      .Layout(LayoutType.Auto)
                                                      .Rows(row => row.Css("tr-item-calculate"))
                                                      .Columns(periodCols));
              })
              .UI(ui =>
              {
                  ui.HighlightRowsOnHover = true;
              })
              .Empty(@<text>
                          <div style="display: grid; place-items: center;">
                              <img src="https://static.tildacdn.com/tild3965-6665-4366-b234-303630633965/99ac3f33649217cbaf8a.svg" style="width: 120px;"/>
                              <span>so empty here...</span>
                          </div>
                      </text>)
              .DataSource(new DataSource.TemplateSyntax<SampleData>
              {
                  Field = s => s.Children,
                  Template = each
              })
              .Render())
    }
}
