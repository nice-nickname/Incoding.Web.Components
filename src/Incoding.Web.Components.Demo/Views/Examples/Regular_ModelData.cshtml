@using Incoding.Web.Components.Demo.Controllers
@using Incoding.Web.Components.Grid;

@{
    Action<ColumnListBuilder<SampleData>> periodCols = cols => cols.Spreaded(s => s.Period, 5,
                                 (cols, i) =>
                                 {
                                     cols.Stacked(s => s.Title(DateTime.Now.AddDays(i).ToShortDateString()),
                                                  cols =>
                                                  {
                                                      cols.Add().Field(s => s.Hours).Title("Hrs").Width(70).Totalable().Filterable(true);
                                                      cols.Add().Field(s => s.JTD).Title("$").Width(70).Totalable().Sortable(true);
                                                  });
                                 });

    Action<ColumnListBuilder<SampleData>> regularCols = (cols) =>
                     {
                        cols.Add().Content(
                        @<text>
                            @using (item.Is(s => s.HasChildren))
                            {
                                @Html.Components().GridUtils.ExpandButton(settings =>
                                {
                                    settings.Content = "".ToString();
                                })
                            }
                        </text>).Width(40);

                        cols.Add().Field(s => s.Index).Width(50).Format(ColumnFormat.Empty).Filterable(true).SortedBy(SortOrder.Asc).Sortable(true);

                        cols.Add().Field(s => s.Name).Width(70).Filterable(true);
                        cols.Add().Field(s => s.Description).Title("Notes").Width(200).Filterable(true);

                        cols.Add().Field(s => s.Amount).Width(70).Format(ColumnFormat.Currency).Totalable();
                        cols.Add().Field(s => s.AmountPercentage).Title("Amount %").Format(ColumnFormat.Percentage).Width(70);
                        cols.Add().Field(s => s.Balance).Width(70);

                        cols.Stacked(s => s.Title("Dates"),
                                        cols =>
                                        {
                                            cols.Add().Field(s => s.Start).Width(70);
                                            cols.Add().Field(s => s.End).Width(70);
                                        });
                     };

    var controller = new IMLGridController("grid");
}

@(Html.Components().Grid<SampleData>("grid")
      .Width("100%")
      .Height("100%")
      .Css("bg-white")
      .Split(splits =>
      {
          splits.Add("regular", table => table.Css("table table-bordered ")
                                              .Layout(LayoutType.Fixed)
                                              .Rows(row => row.Css("tr-item-calculate"))
                                              .Columns(regularCols)
                                              .Nested(s => s.Children, nested => nested.Columns(regularCols)));

          splits.Add("ahahaha", table => table.Css("table table-bordered ")
                                              .Layout(LayoutType.Fixed)
                                              .Rows(row => row.Css("tr-item-calculate"))
                                              .Columns(periodCols)
                                              .Nested(s => s.Children, nested => nested.Columns(periodCols)));

          splits.Add("ehehehe", table => table.Css("table table-bordered ")
                                              .Layout(LayoutType.Fixed)
                                              .Rows(row => row.Css("tr-item-calculate"))
                                              .Columns(periodCols)
                                              .Nested(s => s.Children, nested => nested.Columns(periodCols)));
      })
      .UI(ui =>
      {
          ui.HighlightRowsOnHover = true;
      })
      .Empty(@<text>
                  <div style="display: grid; place-items: center;">
                      <img src="https://static.tildacdn.com/tild3965-6665-4366-b234-303630633965/99ac3f33649217cbaf8a.svg" style="width: 120px;"/>
                      <span>so empty here...</span>
                  </div>
              </text>)
      .DataSource(new DataSource.Model
      {
          Data = DataController.GenerateData(20, true, 5)
      })
      .Render())
